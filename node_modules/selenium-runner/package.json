{
  "name": "selenium-runner",
  "version": "0.2.0",
  "description": "Run a [{url+JSTest}, ..] combo in selenium grid, in parallel, in multiple browsers",
  "main": "index.js",
  "repository": {
    "type": "git",
    "url": "git@github.com:vvo/selenium-runner.git"
  },
  "dependencies": {
    "wd": "0.0.x",
    "async": "0.1.x",
    "selenium-grid-status": "0.0.x"
  },
  "scripts": {
    "test": "node example"
  },
  "keywords": [
    "selenium",
    "runner",
    "parallel",
    "wd"
  ],
  "author": {
    "name": "Vincent Voyer",
    "email": "vincent.voyer@gmail.com"
  },
  "license": "MIT",
  "readme": "selenium-runner\n===============\n\nRun a [{url+JSTest}, ..] combo in selenium grid, in parallel, in multiple browsers.\n\nBasically, this module will launch a set of tests, in the browsers you want.\nA test is defined by a URL to visit and a JavaScript callback to execute when the page\nis ready.\n\n```bash\nnpm install\nnode example\n```\n\n## Writing tests\n\nWe want to check the `<title>` of http://www.google.com in multiple browsers.\nWe will run the same test on http://www.yahoo.com and it will fail because the title\nis different.\n\n### Test file\n\nWrite your test file, it's a callback that will get a ready [browser object](https://github.com/admc/wd/).\n\ncheck-title.js\n```js\nmodule.exports = function checkTitle(browser, cb) {\n  browser.title(function(err, title) {\n    if (err !== null) cb(err);\n\n    if (title === 'Google') {\n      cb(null);\n    } else {\n      cb(new Error('UH OH Title is not ok! Are you on google.com?'));\n    }\n  });\n}\n```\n### Some configuration\n\n* remoteCfg: Where is the [selenium grid](http://code.google.com/p/selenium/wiki/Grid2), you can\nalso use [saucelabs](https://saucelabs.com/)\n* browsers: On which browsers to launch every test\n* concurrency: How many tests a browser can launch in parallel\n\nconfig.json\n```json\n{\n  \"remoteCfg\": {\n    \"host\": \"127.0.0.1\",\n    \"port\": 4444\n  },\n  \"browsers\": [{\n    \"browserName\": \"internet explorer\",\n    \"version\": \"9\"\n  }, {\n    \"browserName\": \"chrome\",\n    \"version\": \"latest\"\n  }],\n  \"concurrency\": 2\n}\n```\n\n### Run them all!\n\nlauncher.js\n```js\nvar seleniumRunner = require('selenium-runner');\n\n// tests to run\nvar tests = [{\n  url: 'http://www.google.com',\n  exec: require('./check-title.js')\n}, {\n  url: 'http://www.yahoo.com',\n  exec: require('./check-title.js')\n}];\n\nvar config = require('./config.json');\n\n// launch tests\nseleniumRunner(config, tests, testCallback, endCallback);\n\n// For each browser, you get the result of calling your test (check-title) here\n// You always get the context: {url: 'http://', browser: {browserName: '', version: }}\nfunction testCallback(err, context) {\n  console.log('A test finished', arguments);\n}\n\n// Called when all tests have finished/or an error popped while connecting to the grid\n// It will not get called when an error is emitted from a test\nfunction endCallback(err) {\n  console.log('All tests ended', arguments);\n}\n```\n\n### Results\n\n```bash\n-> % node example\nYou should get 4 test callbacks and one end callback\nA test finished { '0': null,\n  '1':\n   { url: 'http://www.google.com',\n     browser: { browserName: 'internet explorer', version: '9' } } }\nA test finished { '0': null,\n  '1':\n   { url: 'http://www.google.com',\n     browser: { browserName: 'chrome', version: 'latest' } } }\nA test finished { '0': [Error: UH OH Title is not ok! Are you on google.com?],\n  '1':\n   { url: 'http://www.yahoo.com',\n     browser: { browserName: 'chrome', version: 'latest' } } }\nA test finished { '0': [Error: UH OH Title is not ok! Are you on google.com?],\n  '1':\n   { url: 'http://www.yahoo.com',\n     browser: { browserName: 'internet explorer', version: '9' } } }\nAll tests ended { '0': null }\n```",
  "readmeFilename": "README.md",
  "_id": "selenium-runner@0.2.0",
  "_from": "selenium-runner@"
}
